Description: Adds callbacks on INFORM calls

 net-snmp (5.7.2~dfsg-clearwater3) trusty; urgency=medium

   * Add callback on INFORM responses

Author: Project Clearwater Maintainers <maintainers@projectclearwater.org>

Index: clearwater-net-snmp/agent/agent_trap.c
===================================================================
--- clearwater-net-snmp.orig/agent/agent_trap.c	2016-04-22 16:20:28.369320419 +0000
+++ clearwater-net-snmp/agent/agent_trap.c	2016-04-22 16:29:43.136158660 +0000
@@ -576,6 +576,44 @@
 }
 
 /**
+ * Captures responses or the lack there of from INFORMs that were sent
+ * 1) a response is received from an INFORM
+ * 2) one isn't received and the retries/timeouts have failed
+*/
+int
+handle_inform_response(int op, netsnmp_session * session,
+                       int reqid, netsnmp_pdu *pdu,
+                       void *magic)
+{
+    /* XXX: possibly stats update */
+    switch (op) {
+
+    case NETSNMP_CALLBACK_OP_RECEIVED_MESSAGE:
+        snmp_increment_statistic(STAT_SNMPINPKTS);
+        DEBUGMSGTL(("trap", "received the inform response for reqid=%d\n",
+                    reqid));
+        break;
+
+    case NETSNMP_CALLBACK_OP_TIMED_OUT:
+        DEBUGMSGTL(("trap",
+                    "received a timeout sending an inform for reqid=%d\n",
+                    reqid));
+        break;
+
+    case NETSNMP_CALLBACK_OP_SEND_FAILED:
+        DEBUGMSGTL(("trap",
+                    "failed to send an inform for reqid=%d\n",
+                    reqid));
+        break;
+
+    default:
+        DEBUGMSGTL(("trap", "received op=%d for reqid=%d when trying to send an inform\n", op, reqid));
+    }
+
+    return 1;
+}
+
+/**
  * This function allows you to make a distinction between generic 
  * traps from different classes of equipment. For example, you may want 
  * to handle a SNMP_TRAP_LINKDOWN trap for a particular device in a 
@@ -597,21 +635,25 @@
  *			egp neighbor loss
  *		- SNMP_TRAP_ENTERPRISESPECIFIC:
  *			enterprise specific
- *			
+ *
  * @param specific is the specific trap value.
  *
- * @param enterprise is an enterprise oid in which you want to send specific 
- *	traps from. 
+ * @param enterprise is an enterprise oid in which you want to send specific
+ *        traps from.
  *
  * @param enterprise_length is the length of the enterprise oid, use macro,
- *	OID_LENGTH, to compute length.
+ *        OID_LENGTH, to compute length.
  *
  * @param vars is used to supply list of variable bindings to form an SNMPv2 
- *	trap.
+ *        trap.
  *
- * @param context currently unused 
+ * @param context currently unused
  *
- * @param flags currently unused 
+ * @param flags currently unused
+ *
+ * @param inform_callback is called when INFORM processing is complete
+ *
+ * @param inform_correlator is passed back on the callback
  *
  * @return void
  *
@@ -619,10 +661,12 @@
  * @see send_v2trap
  */
 int
-netsnmp_send_traps(int trap, int specific,
+netsnmp_send_traps_ex(int trap, int specific,
                           const oid * enterprise, int enterprise_length,
                           netsnmp_variable_list * vars,
-                          const char * context, int flags)
+                          const char * context, int flags,
+                          snmp_callback inform_callback,
+                          void * inform_correlator)
 {
     netsnmp_pdu           *template_v1pdu;
     netsnmp_pdu           *template_v2pdu;
@@ -722,7 +766,6 @@
                 return -1;
             }
         }
-            
 
         /*
          * If everything's OK, convert the v2 template into an SNMPv1 trap PDU.
@@ -772,6 +815,12 @@
         }
     }
 
+    DEBUGMSGTL(("trap", "Setting up callback and correlator (%p)\n", inform_correlator));
+    template_v1pdu->inform_callback = inform_callback;
+    template_v1pdu->inform_correlator = inform_correlator;
+    template_v2pdu->inform_callback = inform_callback;
+    template_v2pdu->inform_correlator = inform_correlator;
+
     /*
      * Check whether we're ignoring authFail traps
      */
@@ -820,13 +869,15 @@
 #ifndef NETSNMP_DISABLE_SNMPV1
         if (sink->version == SNMP_VERSION_1) {
           if (template_v1pdu) {
-            send_trap_to_sess(sink->sesp, template_v1pdu);
+            send_trap_to_sess(sink->sesp, template_v1pdu,
+                              inform_callback, inform_correlator);
           }
         } else {
 #endif
           if (template_v2pdu) {
             template_v2pdu->command = sink->pdutype;
-            send_trap_to_sess(sink->sesp, template_v2pdu);
+            send_trap_to_sess(sink->sesp, template_v2pdu,
+                              inform_callback, inform_correlator);
           }
 #ifndef NETSNMP_DISABLE_SNMPV1
         }
@@ -843,64 +894,47 @@
     return 0;
 }
 
+int
+netsnmp_send_traps(int trap, int specific,
+                          const oid * enterprise, int enterprise_length,
+                          netsnmp_variable_list * vars,
+                          const char * context, int flags) {
+  return netsnmp_send_traps_ex(trap,
+                               specific,
+                               enterprise,
+                               enterprise_length,
+                               vars,
+                               context,
+                               flags,
+                               &handle_inform_response,
+                               NULL);
+}
 
 void
 send_enterprise_trap_vars(int trap,
                           int specific,
                           const oid * enterprise, int enterprise_length,
-                          netsnmp_variable_list * vars)
+                          netsnmp_variable_list * vars,
+                          snmp_callback inform_callback,
+                          void * inform_correlator)
 {
-    netsnmp_send_traps(trap, specific,
-                       enterprise, enterprise_length,
-                       vars, NULL, 0);
+    netsnmp_send_traps_ex(trap, specific,
+                          enterprise, enterprise_length,
+                          vars, NULL, 0,
+                          inform_callback, inform_correlator);
     return;
 }
 
-/**
- * Captures responses or the lack there of from INFORMs that were sent
- * 1) a response is received from an INFORM
- * 2) one isn't received and the retries/timeouts have failed
-*/
-int
-handle_inform_response(int op, netsnmp_session * session,
-                       int reqid, netsnmp_pdu *pdu,
-                       void *magic)
-{
-    /* XXX: possibly stats update */
-    switch (op) {
-
-    case NETSNMP_CALLBACK_OP_RECEIVED_MESSAGE:
-        snmp_increment_statistic(STAT_SNMPINPKTS);
-        DEBUGMSGTL(("trap", "received the inform response for reqid=%d\n",
-                    reqid));
-        break;
-
-    case NETSNMP_CALLBACK_OP_TIMED_OUT:
-        DEBUGMSGTL(("trap",
-                    "received a timeout sending an inform for reqid=%d\n",
-                    reqid));
-        break;
-
-    case NETSNMP_CALLBACK_OP_SEND_FAILED:
-        DEBUGMSGTL(("trap",
-                    "failed to send an inform for reqid=%d\n",
-                    reqid));
-        break;
-
-    default:
-        DEBUGMSGTL(("trap", "received op=%d for reqid=%d when trying to send an inform\n", op, reqid));
-    }
-
-    return 1;
-}
-
 
 /*
  * send_trap_to_sess: sends a trap to a session but assumes that the
  * pdu is constructed correctly for the session type. 
  */
 void
-send_trap_to_sess(netsnmp_session * sess, netsnmp_pdu *template_pdu)
+send_trap_to_sess(netsnmp_session * sess,
+                  netsnmp_pdu *template_pdu,
+                  snmp_callback inform_callback,
+                  void *inform_correlator)
 {
     netsnmp_pdu    *pdu;
     int            result;
@@ -929,7 +963,7 @@
 #endif
        ) {
         result =
-            snmp_async_send(sess, pdu, &handle_inform_response, NULL);
+            snmp_async_send(sess, pdu, inform_callback, inform_correlator);
         
     } else {
         if ((sess->version == SNMP_VERSION_3) &&
@@ -955,14 +989,18 @@
 }
 
 void
-send_trap_vars(int trap, int specific, netsnmp_variable_list * vars)
+send_trap_vars(int trap, int specific, netsnmp_variable_list * vars,
+               snmp_callback inform_callback,
+               void * inform_correlator)
 {
     if (trap == SNMP_TRAP_ENTERPRISESPECIFIC)
         send_enterprise_trap_vars(trap, specific, objid_enterprisetrap,
-                                  OID_LENGTH(objid_enterprisetrap), vars);
+                                  OID_LENGTH(objid_enterprisetrap), vars,
+                                  inform_callback, inform_correlator);
     else
         send_enterprise_trap_vars(trap, specific, trap_version_id,
-                                  OID_LENGTH(trap_version_id), vars);
+                                  OID_LENGTH(trap_version_id), vars,
+                                  inform_callback, inform_correlator);
 }
 
 #ifndef NETSNMP_FEATURE_REMOVE_TRAP_VARS_WITH_CONTEXT
@@ -973,11 +1011,11 @@
     if (trap == SNMP_TRAP_ENTERPRISESPECIFIC)
         netsnmp_send_traps(trap, specific, objid_enterprisetrap,
                                   OID_LENGTH(objid_enterprisetrap), vars,
-								  context, 0);
+                  context, 0);
     else
         netsnmp_send_traps(trap, specific, trap_version_id,
                                   OID_LENGTH(trap_version_id), vars, 
-								  context, 0);
+                  context, 0);
     	
 }
 #endif /* NETSNMP_FEATURE_REMOVE_TRAP_VARS_WITH_CONTEXT */
@@ -1008,7 +1046,7 @@
 void
 send_easy_trap(int trap, int specific)
 {
-    send_trap_vars(trap, specific, NULL);
+    send_trap_vars(trap, specific, NULL, NULL, NULL);
 }
 
 /**
@@ -1027,6 +1065,9 @@
  *
  * @param vars is used to supply list of variable bindings to form an SNMPv2 
  *	trap.
+ * @param inform_callback is called when the inform processing is complete.
+ * @param inform_correlator is stored in the PDU to allow the callback to
+ *  correlate with the original request.
  *
  * @return void
  *
@@ -1035,9 +1076,20 @@
  */
 
 void
-send_v2trap(netsnmp_variable_list * vars)
+send_v2trap(netsnmp_variable_list * vars,
+            snmp_callback inform_callback,
+            void *inform_correlator)
 {
-    send_trap_vars(-1, -1, vars);
+  if (inform_callback == NULL)
+  {
+    DEBUGMSGTL(("trap", "Setting up a standard callback\n"));
+  }
+  else
+  {
+    DEBUGMSGTL(("trap", "Setting up a special callback, correlator %p\n", inform_correlator));
+  }
+
+    send_trap_vars(-1, -1, vars, inform_callback, inform_correlator);
 }
 
 /**
@@ -1065,7 +1117,7 @@
 void
 send_trap_pdu(netsnmp_pdu *pdu)
 {
-    send_trap_vars(-1, -1, pdu->variables);
+    send_trap_vars(-1, -1, pdu->variables, NULL, NULL);
 }
 #endif /* NETSNMP_FEATURE_REMOVE_SEND_TRAP_PDU */
 
Index: clearwater-net-snmp/agent/mibgroup/agentx/master_admin.c
===================================================================
--- clearwater-net-snmp.orig/agent/mibgroup/agentx/master_admin.c	2016-04-22 16:20:28.369320419 +0000
+++ clearwater-net-snmp/agent/mibgroup/agentx/master_admin.c	2016-04-22 16:20:28.365320398 +0000
@@ -452,8 +452,8 @@
 	}
 	else
 	{
-        send_trap_vars(-1, -1, pdu->variables);
-	}
+        send_trap_vars(-1, -1, pdu->variables, NULL, NULL);
+  }
 
     return AGENTX_ERR_NOERROR;
 }
Index: clearwater-net-snmp/agent/mibgroup/disman/event/mteEvent.c
===================================================================
--- clearwater-net-snmp.orig/agent/mibgroup/disman/event/mteEvent.c	2016-04-22 16:20:28.369320419 +0000
+++ clearwater-net-snmp/agent/mibgroup/disman/event/mteEvent.c	2016-04-22 16:20:28.365320398 +0000
@@ -439,7 +439,7 @@
     /*
      * ... and send the resulting varbind list as a notification
      */
-    send_v2trap( var );
+    send_v2trap( var, NULL, NULL );
     snmp_free_varbind( var );
     return 0;
 }
Index: clearwater-net-snmp/agent/mibgroup/disman/mteEventTable.c
===================================================================
--- clearwater-net-snmp.orig/agent/mibgroup/disman/mteEventTable.c	2016-04-22 16:20:28.369320419 +0000
+++ clearwater-net-snmp/agent/mibgroup/disman/mteEventTable.c	2016-04-22 16:20:28.365320398 +0000
@@ -336,7 +336,7 @@
                     DEBUGMSGOID(("mteEventTable:send_events", tc->data.objid, tc->data_len / sizeof(oid)));
                     DEBUGMSG(("mteEventTable:send_events", "\n"));
                     
-                    send_v2trap(var_list);
+                    send_v2trap(var_list, NULL, NULL);
                     snmp_free_varbind(var_list);
                 }
             }
Index: clearwater-net-snmp/agent/mibgroup/disman/ping/pingCtlTable.c
===================================================================
--- clearwater-net-snmp.orig/agent/mibgroup/disman/ping/pingCtlTable.c	2016-04-22 16:20:28.369320419 +0000
+++ clearwater-net-snmp/agent/mibgroup/disman/ping/pingCtlTable.c	2016-04-22 16:20:28.365320398 +0000
@@ -1267,7 +1267,7 @@
 
     DEBUGMSG(("pingTest:send_ping_trap", "success!\n"));
 
-    send_v2trap(var_list);
+    send_v2trap(var_list, NULL, NULL);
     snmp_free_varbind(vars);
     vars = NULL;
     snmp_free_varbind(var_list);
Index: clearwater-net-snmp/agent/mibgroup/disman/traceroute/traceRouteCtlTable.c
===================================================================
--- clearwater-net-snmp.orig/agent/mibgroup/disman/traceroute/traceRouteCtlTable.c	2016-04-22 16:20:28.369320419 +0000
+++ clearwater-net-snmp/agent/mibgroup/disman/traceroute/traceRouteCtlTable.c	2016-04-22 16:20:28.365320398 +0000
@@ -1527,7 +1527,7 @@
 
     DEBUGMSG(("pingTest:send_traceRoute_trap", "success!\n"));
 
-    send_v2trap(var_list);
+    send_v2trap(var_list, NULL, NULL);
     snmp_free_varbind(vars);
     vars = NULL;
     snmp_free_varbind(var_list);
Index: clearwater-net-snmp/agent/mibgroup/examples/example.c
===================================================================
--- clearwater-net-snmp.orig/agent/mibgroup/examples/example.c	2016-04-22 16:20:28.369320419 +0000
+++ clearwater-net-snmp/agent/mibgroup/examples/example.c	2016-04-22 16:20:28.365320398 +0000
@@ -718,7 +718,7 @@
         var_obj.val.string = (unsigned char *) example_str;       /* value */
         var_obj.val_len = strlen(example_str);
         DEBUGMSGTL(("example", "write_exampletrap2 sending the v2 trap\n"));
-        send_v2trap(&var_trap);
+        send_v2trap(&var_trap, NULL, NULL);
         DEBUGMSGTL(("example", "write_exampletrap2 v2 trap sent\n"));
 
         break;
Index: clearwater-net-snmp/agent/mibgroup/examples/notification.c
===================================================================
--- clearwater-net-snmp.orig/agent/mibgroup/examples/notification.c	2016-04-22 16:20:28.369320419 +0000
+++ clearwater-net-snmp/agent/mibgroup/examples/notification.c	2016-04-22 16:20:28.365320398 +0000
@@ -165,7 +165,7 @@
      */
     ++count;
     DEBUGMSGTL(("example_notification", "sending trap %ld\n",count));
-    send_v2trap(notification_vars);
+    send_v2trap(notification_vars, NULL, NULL);
 
     /*
      * free the created notification variable list 
Index: clearwater-net-snmp/agent/mibgroup/if-mib/ifTable/ifTable_data_access.c
===================================================================
--- clearwater-net-snmp.orig/agent/mibgroup/if-mib/ifTable/ifTable_data_access.c	2016-04-22 16:20:28.369320419 +0000
+++ clearwater-net-snmp/agent/mibgroup/if-mib/ifTable/ifTable_data_access.c	2016-04-22 16:20:28.365320398 +0000
@@ -296,7 +296,7 @@
      * section of the snmpd.conf manual page. 
      */
     DEBUGMSGTL(("rsys:linkUpDownNotifications", "sending the trap\n"));
-    send_v2trap(notification_vars);
+    send_v2trap(notification_vars, NULL, NULL);
 
     /*
      * free the created notification variable list 
Index: clearwater-net-snmp/agent/mibgroup/notification/snmpNotifyTable.c
===================================================================
--- clearwater-net-snmp.orig/agent/mibgroup/notification/snmpNotifyTable.c	2016-04-22 16:20:28.369320419 +0000
+++ clearwater-net-snmp/agent/mibgroup/notification/snmpNotifyTable.c	2016-04-22 16:20:28.365320398 +0000
@@ -260,7 +260,7 @@
                     send = 0;
             }
             if (send) {
-                send_trap_to_sess(sptr, template_pdu);
+                send_trap_to_sess(sptr, template_pdu, NULL, NULL);
                 ++count;
             } /* session to send to */
         } /* for(sptr) */
Index: clearwater-net-snmp/agent/mibgroup/smux/smux.c
===================================================================
--- clearwater-net-snmp.orig/agent/mibgroup/smux/smux.c	2016-04-22 16:20:28.369320419 +0000
+++ clearwater-net-snmp/agent/mibgroup/smux/smux.c	2016-04-22 16:20:28.369320419 +0000
@@ -2054,7 +2054,8 @@
      * send the traps 
      */
     send_enterprise_trap_vars(trap, specific, (oid *) & sa_enterpriseoid,
-                              sa_enterpriseoid_len, snmptrap_head);
+                              sa_enterpriseoid_len, snmptrap_head,
+                              NULL, NULL);
 
     /*
      * free trap variables 
Index: clearwater-net-snmp/agent/mibgroup/winExtDLL.c
===================================================================
--- clearwater-net-snmp.orig/agent/mibgroup/winExtDLL.c	2016-04-22 16:20:28.369320419 +0000
+++ clearwater-net-snmp/agent/mibgroup/winExtDLL.c	2016-04-22 16:20:28.369320419 +0000
@@ -1183,7 +1183,7 @@
     /*
      * Send trap. 
      */
-    send_v2trap(notification_vars);
+    send_v2trap(notification_vars, NULL, NULL);
 
     /*
      * Free the memory allocated for notification_vars. 
Index: clearwater-net-snmp/apps/snmptrapd_handlers.c
===================================================================
--- clearwater-net-snmp.orig/apps/snmptrapd_handlers.c	2016-04-22 16:20:28.369320419 +0000
+++ clearwater-net-snmp/apps/snmptrapd_handlers.c	2016-04-22 16:20:28.369320419 +0000
@@ -869,7 +869,7 @@
                        netsnmp_transport     *transport,
                        netsnmp_trapd_handler *handler)
 {
-    send_v2trap( pdu->variables );
+    send_v2trap( pdu->variables , NULL, NULL);
     return NETSNMPTRAPD_HANDLER_OK;
 }
 
Index: clearwater-net-snmp/include/net-snmp/agent/agent_trap.h
===================================================================
--- clearwater-net-snmp.orig/include/net-snmp/agent/agent_trap.h	2016-04-22 16:20:28.369320419 +0000
+++ clearwater-net-snmp/include/net-snmp/agent/agent_trap.h	2016-04-22 16:20:28.369320419 +0000
@@ -13,16 +13,28 @@
 void            init_traps(void);
 void            send_easy_trap(int, int);
 void            send_trap_pdu(netsnmp_pdu *);
-void            send_v2trap(netsnmp_variable_list *);
+void            send_v2trap(netsnmp_variable_list *,
+                            snmp_callback,
+                            void *);
 void            send_v3trap(netsnmp_variable_list *vars, const char *context);
-void            send_trap_vars(int, int, netsnmp_variable_list *);
+void            send_trap_vars(int, int, netsnmp_variable_list *,
+                               snmp_callback, void *);
 void            send_trap_vars_with_context(int trap, int specific, 
                                             netsnmp_variable_list *vars,
                                             const char *context);
 void            send_enterprise_trap_vars(int trap, int specific,
                                           const oid * enterprise,
                                           int enterprise_length,
-                                          netsnmp_variable_list * vars);
+                                          netsnmp_variable_list * vars,
+                                          snmp_callback inform_callback,
+                                          void * inform_correlator);
+int             netsnmp_send_traps_ex(int trap, int specific,
+                          const oid * enterprise, int enterprise_length,
+                          netsnmp_variable_list * vars,
+                          /* flags are currently unused */
+                          const char * context, int flags,
+                          snmp_callback inform_callback,
+                          void * inform_correlator);
 int             netsnmp_send_traps(int trap, int specific,
                           const oid * enterprise, int enterprise_length,
                           netsnmp_variable_list * vars,
@@ -37,7 +49,9 @@
 void            snmpd_parse_config_trapcommunity(const char *, char *);
 void            snmpd_free_trapcommunity(void);
 void            send_trap_to_sess(netsnmp_session * sess,
-                                  netsnmp_pdu *template_pdu);
+                                  netsnmp_pdu *template_pdu,
+                                  snmp_callback inform_callback,
+                                  void *inform_correlator);
 
 int             create_trap_session(char *, u_short, char *, int, int);
 int             add_trap_session(netsnmp_session *, int, int, int);
Index: clearwater-net-snmp/include/net-snmp/types.h
===================================================================
--- clearwater-net-snmp.orig/include/net-snmp/types.h	2016-04-22 16:20:28.369320419 +0000
+++ clearwater-net-snmp/include/net-snmp/types.h	2016-04-22 16:20:28.369320419 +0000
@@ -265,6 +265,13 @@
     int             range_subid;
     
     void           *securityStateRef;
+
+    /*
+     * Trap callback related fields
+     */
+    void *         inform_callback;
+    void *        inform_correlator;
+
 } netsnmp_pdu;
 
 
